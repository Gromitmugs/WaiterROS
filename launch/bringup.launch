<launch>
    <node pkg="waiter_ros" type="wheel_interface.py" name="wheel" output="screen"></node>
    <node pkg="waiter_ros" type="diff_tf.py" name="diff_tf" output="screen"></node>

    <arg default="$(find waiter_ros)/robot_description/urdf/waitress_simple_model.xacro" name="model"/>
    <param command="$(find xacro)/xacro $(arg model)" name="robot_description"/>
    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0.344 0.0 0.655 0 0 0 /base_link /lidar_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster_2" args="0.344 0.0 0.655 0 0 0 /base_link /laser_frame 100" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"></node>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"></node>

    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate"     type="int"    value="256000"/>
        <param name="frame_id"     type="string"    value="lidar_frame"/>
    </node>


    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
    	<remap from="scan" to="/scan" /> 
    	<rosparam command="load" file="$(find waiter_ros)/params/laser_scan/angle_filter.yaml" />
    </node>

    <node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry">
        <param name="laser_scan_topic" value="/scan_filtered"/>
        <param name="odom_topic" value="/odom_rf2o"/>
        <param name="publish_tf" value="false" />
        <param name="base_frame_id" value="base_link"/>      
        <param name="odom_frame_id" value="odom"/>              
        <param name="init_pose_from_topic" value=""/>            
        <param name="freq" value="5.0"/>                           
        <param name="verbose" value="true"/>                    
    </node>

    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_node" clear_params="true">
        <rosparam command="load" file="$(find waiter_ros)/params/ekf/ekf.yaml" />
        <remap from="/odometry/filtered" to="/odom"/>
    </node>

    <!-- <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        <param name="use_imu" value="false"/>
        <param name="max_iterations" value="10"/>
    </node> -->

</launch>